#!/usr/bin/env python
# Control weblogic instances
# see --help 
# You may need to: 
# yum install python-argparse 
# from the EPEL repo 
import os
import argparse
import subprocess 

parser = argparse.ArgumentParser(description='Control Weblogic instances',
      epilog="""start - Starts a Weblogic process.
stop - Stops a Weblogic process\n
password - sets the Weblogic boot.properities username/pasword\n
tail  - tails the diagnostic log for the domain or instance\n""")

parser.add_argument('command', metavar='command', help='start|stop|password|tail')
parser.add_argument('domain', metavar='domain', help='Weblogic Domain (ex: IDMDomain)')
parser.add_argument('instance', metavar='instance',nargs='?', 
  help='Optional Weblogic Managed Server instance ex: (wls_oif1).' + 
      ' If instance is not specified it is assumed to be the AdminServer')
parser.add_argument('--dryrun', action='store_true', help='Show the command to be executed, but dont run it')
parser.add_argument('--password', default='Oracle123', help='password for boot.properties')


args = parser.parse_args()

mwhome = os.getenv('MW_HOME', '/app/oracle/fmw')
domainroot = mwhome + '/user_projects/domains' 

domaindir = domainroot +  '/' + args.domain 

if not os.path.exists(domaindir):
  print("Weblogic domain directory  '" + domaindir + "'  not found.")
  print('Check MW_HOME environment var and the domain name: ' + args.domain)
  parser.exit(1)


fnull = open('/dev/null','w')

# Exec a WlS command 
def wlscmd(c):
  cmd = 'nohup ' + domaindir + '/bin/' + c + ' &'  
  print cmd 
  if not args.dryrun:
    subprocess.call(cmd,shell=True,stdout=fnull,stderr=fnull)
  

def setPassword(dir):
  target = domaindir + '/' + dir + '/security'
  if not os.path.exists(target):
    os.makedirs(target)
  p = target + '/boot.properties'
  f = open(p,'w')
  f.write('username=weblogic\n')
  f.write('password=' + args.password + '\n')
  f.close()
  print('wrote  ' + p)

def doError():
  parser.print_help()
  parser.exit(status=1)

def doStart():
  if args.instance:
    wlscmd('startManagedWebLogic.sh ' + args.instance)
  else:
    wlscmd('startWebLogic.sh')

def doStop():
  if args.instance:
    wlscmd('stopManagedWebLogic.sh ' + args.instance)
  else:
    wlscmd('stopWebLogic.sh')

def doSetPassword():
  if args.instance: 
    setPassword('servers/' + args.instance )
  else:
    setPassword('servers/AdminServer')

def doTail():
  loc = domaindir + '/servers/AdminServer/logs/AdminServer-diagnostic.log'
  if args.instance:
    loc = domaindir + '/servers/' + args.instance + '/logs/' + args.instance + '-diagnostic.log' 
  cmd = 'tail -f ' + loc
  print cmd
  os.system(cmd)

if args.command == 'start':
  doStart()
elif args.command == 'stop':
  doStop()
elif args.command == 'password':
  doSetPassword()
elif args.command == 'tail':
  doTail()
else:
  doError()


#cmds = { 'start': doStart, 'stop': doStop, 'setpassword': setPassword}
#cmds.get(args.command,doError)
